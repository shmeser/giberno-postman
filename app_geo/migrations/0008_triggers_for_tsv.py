# Generated by Django 3.1.4 on 2021-02-04 11:31

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('app_geo', '0007_add_trigram_ext'),
    ]

    migration = '''
            CREATE OR REPLACE FUNCTION update_h_store_tsv() RETURNS trigger AS $$
                begin
                  new.names_tsv = to_tsvector('pg_catalog.english', COALESCE(array_to_string(avals(new.names), ' '), ''));
                  return new;
                end
                $$ LANGUAGE plpgsql;

            CREATE TRIGGER app_geo__cities__names_tsv__trigger BEFORE INSERT OR UPDATE
                ON app_geo__cities FOR EACH ROW EXECUTE PROCEDURE 
                update_h_store_tsv();

            CREATE TRIGGER app_geo__cities__native_tsv__trigger BEFORE INSERT OR UPDATE
                ON app_geo__cities FOR EACH ROW EXECUTE FUNCTION
                tsvector_update_trigger(native_tsv, 'pg_catalog.english', native);

            UPDATE app_geo__cities set ID = ID;
                '''

    reverse_migration = '''
                    DROP TRIGGER app_geo__cities__names_tsv__trigger ON app_geo__cities;
                    DROP TRIGGER app_geo__cities__native_tsv__trigger ON app_geo__cities;
                '''

    operations = [
        migrations.AddField(
            model_name='city',
            name='names_tsv',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddField(
            model_name='city',
            name='native_tsv',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name='city',
            index=django.contrib.postgres.indexes.GinIndex(fields=['native_tsv'], name='app_geo__cities__native_tsv'),
        ),
        migrations.AddIndex(
            model_name='city',
            index=django.contrib.postgres.indexes.GinIndex(fields=['names_tsv'], name='app_geo__cities__names_tsv'),
        ),
        migrations.AddIndex(
            model_name='city',
            index=django.contrib.postgres.indexes.GinIndex(fields=['native'], name='app_geo__cities__native', opclasses=('gin_trgm_ops',)),
        ),
        migrations.RunSQL(migration, reverse_migration),
    ]
