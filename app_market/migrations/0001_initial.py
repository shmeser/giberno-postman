# Generated by Django 3.1.4 on 2021-01-12 11:56

import app_market.enums
import app_media.enums
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('code', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Дата получения пользователем')),
                ('discount_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Размер скидки')),
                ('discount_terms', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Условия получения')),
                ('discount_description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Описание услуги')),
            ],
            options={
                'verbose_name': 'Купон',
                'verbose_name_plural': 'Купоны',
                'db_table': 'app_market__coupons',
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=128, null=True)),
                ('category', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=2048, null=True)),
                ('required_docs', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(choices=[('Пасспорт', app_media.enums.MediaType['PASSPORT']), ('ИНН', app_media.enums.MediaType['INN']), ('СНИЛС', app_media.enums.MediaType['SNILS']), ('Медкнижка', app_media.enums.MediaType['MEDICAL_BOOK']), ('Водительское удостоверение', app_media.enums.MediaType['DRIVER_LICENCE'])]), size=None)),
            ],
            options={
                'verbose_name': 'Торговая сеть',
                'verbose_name_plural': 'Торговые сети',
                'db_table': 'app_market__distributors',
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ставка за час')),
                ('currency', models.PositiveIntegerField(choices=[(0, 'BONUS'), (1, 'USD'), (2, 'EUR'), (3, 'RUB')], default=app_market.enums.Currency['RUB'], verbose_name='Валюта')),
                ('employees_count', models.PositiveIntegerField(default=0, verbose_name='Число работников')),
                ('max_employees_count', models.PositiveIntegerField(default=1, verbose_name='Максимальное число работников')),
                ('time_start', models.TimeField(blank=True, null=True, verbose_name='Время начала смены')),
                ('time_end', models.TimeField(blank=True, null=True, verbose_name='Время окончания смены')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала расписания')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания расписания')),
                ('frequency', models.PositiveIntegerField(choices=[(3, 'Ежедневно'), (2, 'Еженедельно'), (1, 'Ежемесячно')], verbose_name='Интервал выполнения')),
                ('by_weekday', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=7, verbose_name='Дни недели')),
                ('by_monthday', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=31, verbose_name='Дни месяца')),
                ('by_month', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=31, verbose_name='Месяцы')),
                ('generated_active_dates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, null=True, size=None, verbose_name='Даты активности смены')),
            ],
            options={
                'verbose_name': 'Рабочая смена',
                'verbose_name_plural': 'Рабочие смены',
                'db_table': 'app_market__shifts',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.CharField(blank=True, max_length=2048, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Геопозиция')),
                ('address', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Адрес')),
                ('is_partner', models.BooleanField(default=False, verbose_name='Является партнером')),
                ('discount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Базовый размер скидки')),
                ('discount_multiplier', models.PositiveIntegerField(blank=True, null=True, verbose_name='Множитель размера скидки')),
                ('discount_terms', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Условия получения')),
                ('discount_description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Описание услуги')),
                ('distributor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_market.distributor')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
                'db_table': 'app_market__shops',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='Сумма')),
                ('exchange_rate', models.FloatField(default=1, verbose_name='Коэффициент обмена')),
                ('type', models.PositiveIntegerField(choices=[(0, 'TEST'), (1, 'TRANSFER'), (2, 'DEPOSIT'), (3, 'WITHDRAWAL'), (4, 'RETURN')], default=app_market.enums.TransactionType['TRANSFER'], verbose_name='Тип транзакции')),
                ('status', models.PositiveIntegerField(choices=[(0, 'CREATED'), (1, 'HOLD'), (2, 'CANCELED'), (3, 'FAILED'), (4, 'COMPLETED')], default=app_market.enums.TransactionStatus['CREATED'], verbose_name='Статус транзакции')),
                ('from_currency', models.PositiveIntegerField(choices=[(0, 'BONUS'), (1, 'USD'), (2, 'EUR'), (3, 'RUB')], default=app_market.enums.Currency['BONUS'], verbose_name='Исходая валюта')),
                ('to_currency', models.PositiveIntegerField(choices=[(0, 'BONUS'), (1, 'USD'), (2, 'EUR'), (3, 'RUB')], default=app_market.enums.Currency['BONUS'], verbose_name='Целевая валюта')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('from_id', models.PositiveIntegerField(blank=True, null=True)),
                ('to_id', models.PositiveIntegerField(blank=True, null=True)),
                ('from_content_type', models.CharField(max_length=1024)),
                ('to_content_type', models.CharField(max_length=1024)),
                ('from_content_type_id', models.PositiveIntegerField(blank=True, null=True)),
                ('to_content_type_id', models.PositiveIntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=1024)),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
                'db_table': 'app_market__transactions',
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('description', models.CharField(blank=True, max_length=2048, null=True)),
                ('requirements', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Требования')),
                ('required_experience', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(default=app_market.enums.WorkExperience['NO'], verbose_name=[(0, 'NO'), (1, 'INVALID'), (2, 'UNDERAGE'), (3, 'MIDDLE'), (4, 'STRONG')]), blank=True, null=True, size=None, verbose_name='Требуемый опыт')),
                ('required_docs', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(choices=[('Пасспорт', app_media.enums.MediaType['PASSPORT']), ('ИНН', app_media.enums.MediaType['INN']), ('СНИЛС', app_media.enums.MediaType['SNILS']), ('Медкнижка', app_media.enums.MediaType['MEDICAL_BOOK']), ('Водительское удостоверение', app_media.enums.MediaType['DRIVER_LICENCE'])]), size=None, verbose_name='Документы')),
                ('features', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Бонусы и привилегии')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ставка за час')),
                ('currency', models.PositiveIntegerField(choices=[(0, 'BONUS'), (1, 'USD'), (2, 'EUR'), (3, 'RUB')], default=app_market.enums.Currency['RUB'], verbose_name='Валюта')),
                ('employment', models.PositiveIntegerField(choices=[(0, 'PARTIAL'), (1, 'FULL')], default=app_market.enums.VacancyEmployment['PARTIAL'], verbose_name='Занятость')),
                ('radius', models.PositiveIntegerField(blank=True, null=True, verbose_name='Максимальное расстояние от места работы')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_market.shop')),
            ],
            options={
                'verbose_name': 'Вакансия',
                'verbose_name_plural': 'Вакансии',
                'db_table': 'app_market__vacancies',
            },
        ),
        migrations.CreateModel(
            name='UserShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('real_time_start', models.DateTimeField(blank=True, null=True)),
                ('real_time_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(choices=[(0, 'INITIAL'), (1, 'STARTED'), (2, 'COMPLETED')], default=app_market.enums.ShiftStatus['INITIAL'])),
                ('qr_code', models.TextField(blank=True, null=True, verbose_name='QR код')),
                ('qr_code_gen_at', models.DateTimeField(blank=True, null=True)),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_market.shift')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Смена пользователя',
                'verbose_name_plural': 'Смены пользователей',
                'db_table': 'app_market__shift_user',
            },
        ),
        migrations.AddField(
            model_name='shift',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_market.shop'),
        ),
        migrations.AddField(
            model_name='shift',
            name='vacancy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_market.vacancy'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('terms_accepted', models.BooleanField(default=False)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_market.coupon')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_market.transaction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'app_market__orders',
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='distributor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_market.distributor'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_market.shop'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
